import json\nimport urllib.request\nimport gzip\nimport logging\nfrom ..exceptions import ProviderError\n\nclass ClaudeAIProvider(BaseClaudeAIProvider):\n    def _make_request(self, method, endpoint, data=None):\n        url = f"{self.BASE_URL}{endpoint}"\n        headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0", "Accept-Encoding": "gzip, deflate, zstd"}\n\n        request = urllib.request.Request(url, headers=headers)\n        if data:\n            request.data = json.dumps(data).encode("utf-8")\n\n        try:\n            self.logger.debug(f"Making {method} request to {url}")\n            self.logger.debug(f"Headers: {headers}")\n            if data:\n                self.logger.debug(f"Request data: {data}")\n\n            with urllib.request.urlopen(request) as response:\n                response_headers = dict(response.getheaders())\n                response_content = response.read().decode("utf-8")\n\n                self.logger.debug(f"Response status code: {response.status}")\n                self.logger.debug(f"Response headers: {response_headers}")\n                self.logger.debug(f"Response content: {response_content[:1000]}...")\n\n                if response.status == 403:\n                    error_msg = (\"Received a 403 Forbidden error. Your session key might be invalid. \"\\"\n                        \"Please try logging out and logging in again. If the issue persists, \"\\"\n                        \"you can try using the claude.ai-curl provider as a workaround:\"\\"\n                        \"claudesync api logout\\n                        \"claudesync api login claude.ai-curl\