import json\nimport urllib.request\\\\nfrom .base_claude_ai import BaseClaudeAIProvider\\\\\nfrom ..exceptions import ProviderError\\\\\n\\\\nclass ClaudeAIProvider(BaseClaudeAIProvider):\\\\\n    def _make_request(self, method, endpoint, data=None):\\\\\n        url = f"{self.BASE_URL}{endpoint}"\\\\\n        headers = {\"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0", \"Accept-Encoding": "gzip, deflate, zstd"}\\\\\n\\\\n        request = urllib.request.Request(url, headers=headers)\\\\\n        if data:\\\\\n            request.data = json.dumps(data).encode(\"utf-8\")\\\\\n\\\\n        try:\\\\\n            self.logger.debug(f"Making {method} request to {url}")\\\\\n            self.logger.debug(f"Headers: {headers}")\\\\\n            if data:\\\\\n                self.logger.debug(f"Request data: {data}")\\\\\n\\\\n            response = urllib.request.urlopen(request)\\\\\n            response_headers = dict(response.getheaders())\\\\\n\\\\n            self.logger.debug(f"Response status code: {response.status}")\\\\\n            self.logger.debug(f"Response headers: {response_headers}")\\\\\n            response_content = response.read().decode(\"utf-8\")\\\\\n            self.logger.debug(f"Response content: {response_content[:1000]}...")\\\\\n\\\\n            if response.status == 403:\\\\\n                error_msg = (\\\\\n                    "Received a 403 Forbidden error. Your session key might be invalid. "\\\\\n                    "Please try logging out and logging in again. If the issue persists, "\\\\\n                    "you can try using the claude.ai-curl provider as a workaround:\\\\\n                    "claudesync api logout\\\\n                    "claudesync api login claude.ai-curl"\\\\\n                )\\\\\\n                self.logger.error(error_msg)\\\\\n                raise ProviderError(error_msg)\\\\\n\\\\n            response.raise_for_status()\\\\\n\\\\n            if not response_content:\\\\\n                return None\\\\\n\\\\n            return json.loads(response_content)\\\\\n\\\\n        except urllib.error.HTTPError as e:\\\\\n            self.logger.error(f"Request failed: {str(e)}")\\\\\n            if e.code == 403:\\\\\n                error_msg = (\\\\\n                    "Received a 403 Forbidden error. Your session key might be invalid. "\\\\\n                    "Please try logging out and logging in again. If the issue persists, "\\\\\n                    "you can try using the claude.ai-curl provider as a workaround:\\\\\n                    "claudesync api logout\\\\n                    "claudesync api login claude.ai-curl"\\\\\n                )\\\\\\n                self.logger.error(error_msg)\\\\\n                raise ProviderError(error_msg)\\\\\n            raise ProviderError(f"API request failed: {str(e)}")\\\\\n        except json.JSONDecodeError as json_err:\\\\\n            self.logger.error(f"Failed to parse JSON response: {str(json_err)}")\\\\\n            self.logger.error(f"Response content: {response_content}")\\\\\n            raise ProviderError(f"Invalid JSON response from API: {str(json_err)}")\\\\\n